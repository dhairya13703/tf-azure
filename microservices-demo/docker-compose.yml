version: '3.8'

services:
  product-service:
    build: 
      context: ./product-service
      dockerfile: Dockerfile
    ports:
      - "5001:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=${SQL_SERVER};Database=${SQL_DATABASE};User Id=${SQL_USER};Password=${SQL_PASSWORD};TrustServerCertificate=True
      - OrderServiceUrl=${ORDER_SERVICE_URL}
    depends_on:
      - azure-sql-edge
    networks:
      - microservices-network

  order-service:
    build: 
      context: ./order-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - COSMOS_URI=${COSMOS_URI}
      - COSMOS_KEY=${COSMOS_KEY}
      - COSMOS_DATABASE=${COSMOS_DATABASE}
      - PRODUCT_SERVICE_URL=${PRODUCT_SERVICE_URL}
    networks:
      - microservices-network

  azure-sql-edge:
    image: mcr.microsoft.com/azure-sql-edge:latest
    environment:
      - ACCEPT_EULA=1
      - MSSQL_SA_PASSWORD=${SQL_PASSWORD}
    ports:
      - "1433:1433"
    networks:
      - microservices-network
    volumes:
      - sqldata:/var/opt/mssql

volumes:
  sqldata:
    driver: local

networks:
  microservices-network:
    driver: bridge